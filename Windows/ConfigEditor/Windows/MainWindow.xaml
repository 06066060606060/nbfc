<Window 
    x:Class="ConfigEditor.Windows.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:b="clr-namespace:ConfigEditor.Behaviors"
        
    Title="NoteBook FanControl - Config Editor" 
    Height="420" 
    Width="560" 
    Icon="/ConfigEditor;component/fan.ico"
    WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <ObjectDataProvider x:Key="sortedDataProvider"/>
    </Window.Resources>

    <Grid Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
        <ToolBar ToolBarTray.IsLocked="True"
                 Height="34"
                 Margin="-8,-4,-12,0"
                 HorizontalAlignment="Stretch"
                 VerticalAlignment="Top" 
                 Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                 IsEnabled="{Binding IsEditing, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource invertBooleanConverter}}">

            <Button Margin="10,4,0,0" Command="{Binding CreateNewConfigCommand}">
                <StackPanel Orientation="Horizontal">
                    <Image Height="14"
                           Margin="0,0,0,0" 
                           Source="{StaticResource newConfig}"/>

                    <TextBlock Margin="3,0,0,0" 
                               Text="New"/>
                </StackPanel>
            </Button>

            <Button Margin="5,4,0,0" Command="{Binding SaveConfigCommand}">
                <StackPanel Orientation="Horizontal">
                    <Image Height="13" 
                           Source="{StaticResource save}"/>

                    <TextBlock Margin="3,0,0,0" 
                               Text="Save"/>
                </StackPanel>
            </Button>

            <Button Margin="5,4,0,0" Command="{Binding SaveConfigAsCommand}">
                <StackPanel Orientation="Horizontal">
                    <Image Height="13" 
                           Source="{StaticResource save}"/>

                    <TextBlock Margin="3,0,0,0" 
                               Text="Save as"/>
                </StackPanel>
            </Button>

            <Button Margin="5,4,0,0" Command="{Binding DeleteConfigCommand}" >
                <StackPanel Orientation="Horizontal">
                    <Image Height="15" 
                           Source="{StaticResource delete}"/>

                    <TextBlock Margin="3,0,0,0" 
                               Text="Delete"/>
                </StackPanel>
            </Button>

            <Button Margin="5,4,0,0" Command="{Binding ImportConfigCommand}">
                <StackPanel Orientation="Horizontal">
                    <Image Height="15" 
                           Source="{StaticResource importConfig}"/>

                    <TextBlock Margin="3,0,0,0" 
                               Text="Import"/>
                </StackPanel>
            </Button>
        </ToolBar>

        <Label Content="Config name:" 
               FontWeight="SemiBold" 
               HorizontalAlignment="Left"
               Margin="10,42,0,0"
               VerticalAlignment="Top"/>

        <ComboBox Margin="136,45,10,0" 
                  VerticalAlignment="Top" 
                  b:SelectionChangedBehaviour.Command="{Binding SelectConfigCommand}"
                  SelectedValue="{Binding SelectedConfigName}" 
                  ItemsSource="{Binding ConfigNames}">
        </ComboBox>

        <Label Content="Notebook model:" 
               FontWeight="SemiBold"
               HorizontalAlignment="Left"
               Margin="10,73,0,0" 
               VerticalAlignment="Top"/>

        <TextBox x:Name="notebookModel"
                 Height="23"
                 Margin="136,76,66,0" 
                 TextWrapping="Wrap"
                 VerticalAlignment="Top" 
                 IsReadOnly="{Binding IsChecked, ElementName=lock, Converter={StaticResource invertBooleanConverter}}" 
                 Text="{Binding NotebookModel}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Background" 
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>

                        <Trigger Property="IsReadOnly" Value="False">
                            <Setter Property="Background" 
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <ToggleButton Name="lock"
                      Margin="0,76,10,0" 
                      VerticalAlignment="Top" 
                      Padding="3" 
                      Height="23"
        	          HorizontalAlignment="Right" 
                      Width="23" 
                      Checked="lock_Checked">

            <ToggleButton.Style>
                <Style TargetType="{x:Type ToggleButton}">
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="ToolTip"
                                    Value="Textbox is unlocked  (Click to lock)"/>

                            <Setter Property="Content">
                                <Setter.Value>
                                    <Image Source="{StaticResource unlocked}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="ToolTip" 
                                    Value="Textbox is locked  (Click to unlock)"/>

                            <Setter Property="Content">
                                <Setter.Value>
                                    <Image Source="{StaticResource locked}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>

        <Button HorizontalAlignment="Right" 
                Margin="0,76,38,0" 
                VerticalAlignment="Top" 
                Padding="3" 
                Height="23"
                Width="23" 
        	    ToolTip="Insert notebook model" 
                IsEnabled="{Binding IsChecked, ElementName=lock}" 
                Click="insertNotebookModel_Click">

            <Image Source="{StaticResource loadDefaults}">
                <Image.LayoutTransform>
                    <RotateTransform Angle="90"/>
                </Image.LayoutTransform>
            </Image>
        </Button>

        <Label Content="Config author:" 
        	   FontWeight="SemiBold"
        	   HorizontalAlignment="Left"
        	   Margin="10,105,0,0" 
        	   VerticalAlignment="Top"/>
        
        <TextBox Height="23"
                 Margin="136,108,66,0" 
        	     TextWrapping="Wrap"
        	     VerticalAlignment="Top"
        	     Text="{Binding Author, UpdateSourceTrigger=PropertyChanged}"/>

        <TabControl Margin="0,150,0,0">
            <TabItem Header="Basic configuration">
                <Grid Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="165"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Label Content="EC poll interval (ms):" 
                           Margin="0,19,8,0" 
                           VerticalAlignment="Top" 
                           Height="26" 
                           Width="Auto" 
                           HorizontalAlignment="Right"/>

                    <xctk:IntegerUpDown Value="{Binding EcPollInterval}"
                                        Margin="0,22,0,0"
                                        HorizontalAlignment="Left" 
                                        Width="70" 
                                        Height="23" 
                                        VerticalAlignment="Top" 
                                        Grid.Column="1"
                                        Minimum="100" 
                                        Maximum="6000"/>

                    <Label Content="Critical temperature (°C):"
                           Margin="0,51,8,0" 
                           VerticalAlignment="Top" 
                           Height="26"
                           Width="Auto" 
                           HorizontalContentAlignment="Right"/>

                    <xctk:IntegerUpDown Value="{Binding CriticalTemperature}"
                                        Margin="0,54,0,0" 
                                        HorizontalAlignment="Left"
                                        Width="70" 
                                        Height="23" 
                                        VerticalAlignment="Top" 
                                        Grid.Column="1" 
                                        Minimum="0" 
                                        Maximum="100"/>

                    <Label Content="Read/write mode:" 
                           Margin="0,86,8,0" 
                           VerticalAlignment="Top" 
                           Width="Auto" 
                           Height="26" 
                           HorizontalAlignment="Right"/>

                    <RadioButton Content="Byte" 
                                 HorizontalAlignment="Left" 
                                 Margin="0,94,0,0" 
                                 VerticalAlignment="Top" 
                                  Grid.Column="1" 
                                 Height="15"
                                 Width="42" 
                                 IsChecked="{Binding ReadWriteWords, Converter={StaticResource invertBooleanConverter}}"/>

                    <RadioButton Content="Word"
                                 HorizontalAlignment="Left" 
                                 Margin="0,114,0,0" 
                                 VerticalAlignment="Top" 
                                 Grid.Column="1"
                                 Height="15" 
                                 Width="48" 
                                 IsChecked="{Binding ReadWriteWords}"/>
                </Grid>
            </TabItem>

            <TabItem Header="Fan configuration">
                <Grid Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">
                    <DataGrid Name="fanConfigsGrid" 
                              Margin="0,35,0,0" 
                              HorizontalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" 
                              VerticalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" 
                              Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                              AutoGenerateColumns="False" 
                              ItemsSource="{Binding FanConfigs}" 
                              CanUserSortColumns="False"
                              SelectionMode="Single" 
                              HeadersVisibility="Column"
                              CanUserResizeRows="False" 
                              IsReadOnly="True" 
                              MouseDoubleClick="fanConfigsGrid_MouseDoubleClick">

                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding FanDisplayName}" 
                                                Header="Fan display name"/>

                            <DataGridTextColumn Binding="{Binding ReadRegister}" 
                                                Header="Read register"/>

                            <DataGridTextColumn Binding="{Binding WriteRegister}" 
                                                Header="Write register"/>

                            <DataGridTextColumn Binding="{Binding MinSpeedValue}" 
                                                Header="Min. speed"/>

                            <DataGridTextColumn Binding="{Binding MaxSpeedValue}" 
                                                Header="Max. speed"/>

                            <DataGridCheckBoxColumn Binding="{Binding ResetRequired}" 
                                                    Header="Reset on exit"/>

                            <DataGridTextColumn Binding="{Binding ResetValue}" 
                                                Header="Reset value"/>

                            <DataGridTextColumn Binding="{Binding TemperatureThresholds.Count}"
                                                Header="Temperature thresholds"/>

                            <DataGridTextColumn Binding="{Binding FanSpeedOverrides.Count}" 
                                                Header="Fan speed overrides"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <Button HorizontalAlignment="Left" 
                            Margin="6,5,0,0"
                            VerticalAlignment="Top"
                            Padding="3"
                            Height="23"
                            Width="23" 
                            ToolTip="Add new fan configuration" 
                            Click="addFanConfig_Click">

                        <Image Source="{StaticResource add}"/>
                    </Button>
                    <Button HorizontalAlignment="Left" 
                            Margin="34,5,0,0" 
                            VerticalAlignment="Top" 
                            Padding="3"
                            Height="23"
                            Width="23"
                            IsEnabled="{Binding SelectedValue, ElementName=fanConfigsGrid, Converter={StaticResource selectionToBoolConverter}}"
                            ToolTip="Edit selected fan configuration" 
                            Click="editFanConfig_Click">

                        <Image Source="{StaticResource edit}"/>
                    </Button>
                    <Button HorizontalAlignment="Left"
                            Margin="62,5,0,0"
                            VerticalAlignment="Top"
                            Padding="3"
                            Height="23" 
                            Width="23"
                            IsEnabled="{Binding SelectedValue, ElementName=fanConfigsGrid, Converter={StaticResource selectionToBoolConverter}}" 
                            ToolTip="Delete selected fan configuration" Click="removeFanConfig_Click">

                        <Image Source="{StaticResource delete}"/>
                    </Button>
                </Grid>
            </TabItem>

            <TabItem Header="Register write configuration">
                <Grid Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">
                    <DataGrid Name="registerWriteConfigsGrid"
                              Margin="0,35,0,0"
                              HorizontalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" 
                              VerticalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" 
                              Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" 
                              AutoGenerateColumns="False"
                              ItemsSource="{Binding RegisterWriteConfigs}"
                              CanUserSortColumns="False"
                              SelectionMode="Single" 
                              HeadersVisibility="Column"
                              CanUserResizeRows="False" 
                              IsReadOnly="True" 
                              MouseDoubleClick="registerWriteConfigsGrid_MouseDoubleClick">

                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Description}" 
                                                Header="Description"/>

                            <DataGridTextColumn Binding="{Binding WriteOccasion}" 
                                                Header="Write occasion" />

                            <DataGridTextColumn Binding="{Binding WriteMode}" 
                                                Header="Write mode" />

                            <DataGridTextColumn Binding="{Binding Register}" 
                                                Header="Register"/>

                            <DataGridTextColumn Binding="{Binding Value}" 
                                                Header="Value"/>

                            <DataGridCheckBoxColumn Binding="{Binding ResetRequired}" 
                                                    Header="Reset on exit"/>

                            <DataGridTextColumn Binding="{Binding ResetWriteMode}" 
                                                Header="Reset write mode"/>

                            <DataGridTextColumn Binding="{Binding ResetValue}" 
                                                Header="Reset value"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <Button HorizontalAlignment="Left"
                            Margin="6,5,0,0" 
                            VerticalAlignment="Top"
                            Padding="3"
                            Height="23" 
                            Width="23" 
                             ToolTip="Add new register write configuration"
                            Click="addRegisterWriteConfig_Click">

                        <Image Source="{StaticResource add}"/>
                    </Button>

                    <Button HorizontalAlignment="Left" 
                            Margin="34,5,0,0"
                            VerticalAlignment="Top"
                            Padding="3"
                            Height="23" 
                            Width="23"
                            IsEnabled="{Binding SelectedValue, ElementName=registerWriteConfigsGrid, Converter={StaticResource selectionToBoolConverter}}" 
                            ToolTip="Edit selected register write configuration" 
                            Click="editRegisterWriteConfig_Click">
                        <Image Source="{StaticResource edit}"/>
                    </Button>

                    <Button HorizontalAlignment="Left"
                            Margin="62,5,0,0" 
                            VerticalAlignment="Top"
                            Padding="3" 
                            Height="23" 
                            Width="23"
                            IsEnabled="{Binding SelectedValue, ElementName=registerWriteConfigsGrid, Converter={StaticResource selectionToBoolConverter}}" 
                            ToolTip="Delete selected register write configuration" 
                            Click="removeRegisterWriteConfig_Click">

                        <Image Source="{StaticResource delete}"/>
                    </Button>
                </Grid>
            </TabItem>
        </TabControl>        
    </Grid>
</Window>
